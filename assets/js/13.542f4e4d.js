(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{177:function(e,a,v){"use strict";v.r(a);var _=v(0),r=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("div",{staticClass:"content"},[v("h1",{attrs:{id:"angular-部分"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#angular-部分","aria-hidden":"true"}},[e._v("#")]),e._v(" Angular 部分")]),e._v(" "),v("h2",{attrs:{id:"使用-angular-2，和使用-angular-1-相比，有什么优势？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用-angular-2，和使用-angular-1-相比，有什么优势？","aria-hidden":"true"}},[e._v("#")]),e._v(" 使用 Angular 2，和使用 Angular 1 相比，有什么优势？")]),e._v(" "),v("ol",[v("li",[e._v("Angular 2 是一个平台，不仅是一种语言")]),e._v(" "),v("li",[e._v("更好的速度和性能")]),e._v(" "),v("li",[e._v("更简单的依赖注入")]),e._v(" "),v("li",[e._v("模块化，跨平台")]),e._v(" "),v("li",[e._v("具备 ES6 和 Typescript 的好处。")]),e._v(" "),v("li",[e._v("灵活的路由，具备延迟加载功能")]),e._v(" "),v("li",[e._v("更容易学习")])]),e._v(" "),v("h2",{attrs:{id:"ng-show-ng-hide与ng-if的区别？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ng-show-ng-hide与ng-if的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" "),v("code",[e._v("ng-show/ng-hide")]),e._v("与"),v("code",[e._v("ng-if")]),e._v("的区别？")]),e._v(" "),v("p",[e._v("我们都知道 ng-show/ng-hide 实际上是通过"),v("code",[e._v("display")]),e._v("来进行隐藏和显示的。而 ng-if 实际上控制 dom 节点的增删除来实现的。因此如果我们是根据不同的条件来进行 dom 节点的加载的话，那么 ng-if 的性能好过 ng-show.")]),e._v(" "),v("h2",{attrs:{id:"解释下什么是-rootscrope以及和-scope的区别？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解释下什么是-rootscrope以及和-scope的区别？","aria-hidden":"true"}},[e._v("#")]),e._v(" 解释下什么是"),v("code",[e._v("$rootScrope")]),e._v("以及和"),v("code",[e._v("$scope")]),e._v("的区别？")]),e._v(" "),v("p",[e._v("通俗的说"),v("code",[e._v("$rootScrope")]),e._v("页面所有"),v("code",[e._v("$scope")]),e._v("的"),v("code",[e._v("父亲")]),e._v("。")]),e._v(" "),v("p",[e._v("我们来看下如何产生"),v("code",[e._v("$rootScope")]),e._v("和"),v("code",[e._v("$scope")]),e._v("吧。")]),e._v(" "),v("p",[e._v("step1:Angular 解析"),v("code",[e._v("ng-app")]),e._v("然后在内存中创建"),v("code",[e._v("$rootScope")]),e._v("。")]),e._v(" "),v("p",[e._v("step2:angular 回继续解析，找到"),v("code",[e._v("{{}}")]),e._v("表达式，并解析成变量。")]),e._v(" "),v("p",[e._v("step3:接着会解析带有"),v("code",[e._v("ng-controller")]),e._v("的 div 然后指向到某个 controller 函数。这个时候在这个 controller 函数变成一个$scope 对象实例。")]),e._v(" "),v("h2",{attrs:{id:"表达式-yourmodel-是如何工作的？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#表达式-yourmodel-是如何工作的？","aria-hidden":"true"}},[e._v("#")]),e._v(" 表达式"),v("code",[e._v("{yourModel}")]),e._v("是如何工作的？")]),e._v(" "),v("p",[e._v("它依赖于 $interpolation 服务，在初始化页面 html 后，它会找到这些表达式，并且进行标记，于是每遇见一个"),v("code",[e._v("{{}}")]),e._v("，则会设置一个"),v("code",[e._v("$watch")]),e._v("。而"),v("code",[e._v("$interpolation")]),e._v("会返回一个带有上下文参数的函数，最后该函数执行，则算是表达式"),v("code",[e._v("$parse")]),e._v("到那个作用域上。")]),e._v(" "),v("h2",{attrs:{id:"angular-中的-digest-周期是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#angular-中的-digest-周期是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" Angular 中的 digest 周期是什么？")]),e._v(" "),v("p",[e._v("每个 digest 周期中，angular 总会对比 scope 上 model 的值，一般 digest 周期都是自动触发的，我们也可以使用$apply 进行手动触发。")]),e._v(" "),v("h2",{attrs:{id:"列出至少三种实现不同模块之间通信方式？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#列出至少三种实现不同模块之间通信方式？","aria-hidden":"true"}},[e._v("#")]),e._v(" 列出至少三种实现不同模块之间通信方式？")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("Service")])]),e._v(" "),v("li",[v("p",[e._v("events,指定绑定的事件")])]),e._v(" "),v("li",[v("p",[e._v("使用 $rootScope")])]),e._v(" "),v("li",[v("p",[e._v("controller 之间直接使用"),v("code",[e._v("$parent")]),e._v(","),v("code",[e._v("$$childHead")]),e._v("等")])]),e._v(" "),v("li",[v("p",[e._v("directive 指定属性进行数据绑定")])])])])}],!1,null,null,null);r.options.__file="angular.md";a.default=r.exports}}]);