(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{179:function(e,v,_){"use strict";_.r(v);var o=_(0),d=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),_("h2",{attrs:{id:"对于-mvvm-的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对于-mvvm-的理解","aria-hidden":"true"}},[e._v("#")]),e._v(" 对于 MVVM 的理解")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("MVVM")]),e._v("是"),_("code",[e._v("Model-View-ViewModel")]),e._v("的缩写")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Model")]),e._v("代表数据模型，也可以在"),_("code",[e._v("Model")]),e._v("中定义数据修改和操作的业务逻辑。")]),e._v(" "),_("li",[_("code",[e._v("View")]),e._v("代表"),_("code",[e._v("UI")]),e._v("组件，它负责将数据模型转化成"),_("code",[e._v("UI")]),e._v("展现出来。")]),e._v(" "),_("li",[_("code",[e._v("ViewModel")]),e._v("监听模型数据的改变和控制视图行为、处理用户交互，简单理解就是一个同步 View 和"),_("code",[e._v("Model")]),e._v("的对象，连接"),_("code",[e._v("Model")]),e._v("和"),_("code",[e._v("View")]),e._v(" "),_("blockquote",[_("ul",[_("li",[e._v("在"),_("code",[e._v("MVVM")]),e._v("架构下，"),_("code",[e._v("View")]),e._v("和"),_("code",[e._v("Model")]),e._v("之间并没有直接的联系，而是通过"),_("code",[e._v("ViewModel")]),e._v("进行交互，"),_("code",[e._v("Model")]),e._v("和"),_("code",[e._v("ViewModel")]),e._v("之间的交互是双向的， 因此"),_("code",[e._v("View")]),e._v("数据的变化会同步到 Model 中，而 Model 数据的变化也会立即反应到"),_("code",[e._v("View")]),e._v("上。")]),e._v(" "),_("li",[_("code",[e._v("ViewModel")]),e._v("通过双向数据绑定把"),_("code",[e._v("View")]),e._v("层和"),_("code",[e._v("Model")]),e._v("层连接了起来，而"),_("code",[e._v("View")]),e._v("和"),_("code",[e._v("Model")]),e._v("之间的同步工作完全是自动的，无需人为干涉，因此开发者只需关注业务逻辑，不需要手动操作 DOM，不需要关注数据状态的同步问题，复杂的数据状态维护完全由"),_("code",[e._v("MVVM")]),e._v("来统一管理")])])])])])])}],!1,null,null,null);d.options.__file="index.md";v.default=d.exports}}]);