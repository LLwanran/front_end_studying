(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{183:function(e,v,_){"use strict";_.r(v);var t=_(0),a=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("div",{staticClass:"content"},[_("h1",{attrs:{id:"vue-部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-部分","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 部分")]),e._v(" "),_("h2",{attrs:{id:"vue-的优点是什么？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的优点是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 的优点是什么？")]),e._v(" "),_("ul",[_("li",[e._v("低耦合。视图（"),_("code",[e._v("View")]),e._v("）可以独立于"),_("code",[e._v("Model")]),e._v("变化和修改，一个"),_("code",[e._v("ViewModel")]),e._v("可以绑定到不同的"),_("code",[e._v('"View"')]),e._v("上，当 View 变化的时候 Model 可以不变，当"),_("code",[e._v("Model")]),e._v("变化的时候"),_("code",[e._v("View")]),e._v("也可以不变")]),e._v(" "),_("li",[e._v("可重用性。你可以把一些视图逻辑放在一个"),_("code",[e._v("ViewModel")]),e._v("里面，让很多"),_("code",[e._v("view")]),e._v("重用这段视图逻辑")]),e._v(" "),_("li",[e._v("可测试。界面素来是比较难于测试的，而现在测试可以针对"),_("code",[e._v("ViewModel")]),e._v("来写")])]),e._v(" "),_("h2",{attrs:{id:"请详细说下你对-vue-生命周期的理解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请详细说下你对-vue-生命周期的理解","aria-hidden":"true"}},[e._v("#")]),e._v(" 请详细说下你对 vue 生命周期的理解")]),e._v(" "),_("blockquote",[_("p",[e._v("答：总共分为 8 个阶段创建前/后，载入前/后，更新前/后，销毁前/后")])]),e._v(" "),_("ul",[_("li",[e._v("创建前/后： 在"),_("code",[e._v("beforeCreate")]),e._v("阶段，"),_("code",[e._v("vue")]),e._v("实例的挂载元素"),_("code",[e._v("el")]),e._v("和数据对象"),_("code",[e._v("data")]),e._v("都为"),_("code",[e._v("undefined")]),e._v("，还未初始化。在"),_("code",[e._v("created")]),e._v("阶段，"),_("code",[e._v("vue")]),e._v("实例的数据对象"),_("code",[e._v("data")]),e._v("有了，el 还没有")]),e._v(" "),_("li",[e._v("载入前/后：在"),_("code",[e._v("beforeMount")]),e._v("阶段，"),_("code",[e._v("vue")]),e._v("实例的"),_("code",[e._v("$el")]),e._v("和"),_("code",[e._v("data")]),e._v("都初始化了，但还是挂载之前为虚拟的"),_("code",[e._v("dom")]),e._v("节点，"),_("code",[e._v("data.message")]),e._v("还未替换。在"),_("code",[e._v("mounted")]),e._v("阶段，"),_("code",[e._v("vue")]),e._v("实例挂载完成，"),_("code",[e._v("data.message")]),e._v("成功渲染。")]),e._v(" "),_("li",[e._v("更新前/后：当"),_("code",[e._v("data")]),e._v("变化时，会触发"),_("code",[e._v("beforeUpdate")]),e._v("和"),_("code",[e._v("updated")]),e._v("方法")]),e._v(" "),_("li",[e._v("销毁前/后：在执行"),_("code",[e._v("destroy")]),e._v("方法后，对"),_("code",[e._v("data")]),e._v("的改变不会再触发周期函数，说明此时"),_("code",[e._v("vue")]),e._v("实例已经解除了事件监听以及和"),_("code",[e._v("dom")]),e._v("的绑定，但是"),_("code",[e._v("dom")]),e._v("结构依然存在\n"),_("strong",[e._v("什么是 vue 生命周期？")])]),e._v(" "),_("li",[e._v("答： Vue 实例从创建到销毁的过程，就是生命周期。从开始创建、初始化数据、编译模板、挂载 Dom→ 渲染、更新 → 渲染、销毁等一系列过程，称之为 Vue 的生命周期。\n"),_("strong",[e._v("vue 生命周期的作用是什么？")])]),e._v(" "),_("li",[e._v("答：它的生命周期中有多个事件钩子，让我们在控制整个 Vue 实例的过程时更容易形成好的逻辑。\n"),_("strong",[e._v("vue 生命周期总共有几个阶段？")])]),e._v(" "),_("li",[e._v("答：它可以总共分为"),_("code",[e._v("8")]),e._v("个阶段：创建前/后、载入前/后、更新前/后、销毁前/销毁后。\n"),_("strong",[e._v("第一次页面加载会触发哪几个钩子？")])]),e._v(" "),_("li",[e._v("答：会触发下面这几个"),_("code",[e._v("beforeCreate")]),e._v("、"),_("code",[e._v("created")]),e._v("、"),_("code",[e._v("beforeMount")]),e._v("、"),_("code",[e._v("mounted")]),e._v("。\n"),_("strong",[e._v("DOM 渲染在哪个周期中就已经完成？")])]),e._v(" "),_("li",[e._v("答："),_("code",[e._v("DOM")]),e._v("渲染在"),_("code",[e._v("mounted")]),e._v("中就已经完成了")])]),e._v(" "),_("h2",{attrs:{id:"请列举出-3-个-vue-中常用的生命周期钩子函数？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请列举出-3-个-vue-中常用的生命周期钩子函数？","aria-hidden":"true"}},[e._v("#")]),e._v(" 请列举出 3 个 Vue 中常用的生命周期钩子函数？")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("created")]),e._v(": 实例已经创建完成之后调用,在这一步,实例已经完成数据观测, 属性和方法的运算,"),_("code",[e._v("watch/event")]),e._v("事件回调. 然而, 挂载阶段还没有开始,"),_("code",[e._v("$el")]),e._v("属性目前还不可见")]),e._v(" "),_("li",[_("code",[e._v("mounted")]),e._v(":"),_("code",[e._v("el")]),e._v("被新创建的"),_("code",[e._v("vm.$el")]),e._v("替换，并挂载到实例上去之后调用该钩子。如果"),_("code",[e._v("root")]),e._v("实例挂载了一个文档内元素，当"),_("code",[e._v("mounted")]),e._v("被调用时"),_("code",[e._v("vm.$el")]),e._v("也在文档内。")]),e._v(" "),_("li",[_("code",[e._v("activated")]),e._v(":"),_("code",[e._v("keep-alive")]),e._v("组件激活时调用")])]),e._v(" "),_("h2",{attrs:{id:"nexttick"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nexttick","aria-hidden":"true"}},[e._v("#")]),e._v(" NextTick")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("nextTick")]),e._v("可以让我们在下次 DOM 更新循环结束之后执行延迟回调，用于获得更新后的"),_("code",[e._v("DOM")])])]),e._v(" "),_("h2",{attrs:{id:"vue-实现数据双向绑定的原理：object-defineproperty"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-实现数据双向绑定的原理：object-defineproperty","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 实现数据双向绑定的原理：Object.defineProperty()")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("vue")]),e._v("实现数据双向绑定主要是：采用数据劫持结合发布者-订阅者模式的方式，通过"),_("code",[e._v("Object.defineProperty()")]),e._v("来劫持各个属性的"),_("code",[e._v("setter")]),e._v("，"),_("code",[e._v("getter")]),e._v("，在数据变动时发布消息给订阅者，触发相应监听回调。当把一个普通"),_("code",[e._v("Javascript")]),e._v("对象传给 Vue 实例来作为它的"),_("code",[e._v("data")]),e._v("选项时，Vue 将遍历它的属性，用"),_("code",[e._v("Object.defineProperty()")]),e._v("将它们转为"),_("code",[e._v("getter/setter")]),e._v("。用户看不到"),_("code",[e._v("getter/setter")]),e._v("，但是在内部它们让"),_("code",[e._v("Vue")]),e._v("追踪依赖，在属性被访问和修改时通知变化。")]),e._v(" "),_("li",[e._v("vue 的数据双向绑定 将"),_("code",[e._v("MVVM")]),e._v("作为数据绑定的入口，整合"),_("code",[e._v("Observer")]),e._v("，"),_("code",[e._v("Compile")]),e._v("和"),_("code",[e._v("Watcher")]),e._v("三者，通过"),_("code",[e._v("Observer")]),e._v("来监听自己的"),_("code",[e._v("model")]),e._v("的数据变化，通过"),_("code",[e._v("Compile")]),e._v("来解析编译模板指令（"),_("code",[e._v("vue")]),e._v("中是用来解析"),_("code",[e._v("{{}}")]),e._v("），最终利用"),_("code",[e._v("watcher")]),e._v("搭起"),_("code",[e._v("observer")]),e._v("和"),_("code",[e._v("Compile")]),e._v("之间的通信桥梁，达到数据变化 —>视图更新；视图交互变化（"),_("code",[e._v("input")]),e._v("）—>数据"),_("code",[e._v("model")]),e._v("变更双向绑定效果。")])]),e._v(" "),_("h2",{attrs:{id:"vue-组件间的参数传递"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件间的参数传递","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 组件间的参数传递")]),e._v(" "),_("h3",{attrs:{id:"父组件与子组件传值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#父组件与子组件传值","aria-hidden":"true"}},[e._v("#")]),e._v(" 父组件与子组件传值")]),e._v(" "),_("blockquote",[_("p",[e._v("父组件传给子组件：子组件通过"),_("code",[e._v("props")]),e._v("方法接受数据；")])]),e._v(" "),_("ul",[_("li",[e._v("子组件传给父组件："),_("code",[e._v("$emit")]),e._v("方法传递参数\n"),_("strong",[e._v("非父子组件间的数据传递，兄弟组件传值")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("eventBus")]),e._v("，就是创建一个事件中心，相当于中转站，可以用它来传递事件和接收事件。项目比较小时，用这个比较合适（虽然也有不少人推荐直接用"),_("code",[e._v("VUEX")]),e._v("，具体来说看需求）")])])])]),e._v(" "),_("h2",{attrs:{id:"vue-的路由实现：hash-模式-和-history-模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-的路由实现：hash-模式-和-history-模式","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 的路由实现：hash 模式 和 history 模式")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("hash")]),e._v("模式：在浏览器中符号"),_("code",[e._v("“#”")]),e._v("，#以及#后面的字符称之为"),_("code",[e._v("hash")]),e._v("，用"),_("code",[e._v("window.location.hash")]),e._v("读取。特点："),_("code",[e._v("hash")]),e._v("虽然在"),_("code",[e._v("URL")]),e._v("中，但不被包括在"),_("code",[e._v("HTTP")]),e._v("请求中；用来指导浏览器动作，对服务端安全无用，"),_("code",[e._v("hash")]),e._v("不会重加载页面。")]),e._v(" "),_("li",[_("code",[e._v("history")]),e._v("模式：h"),_("code",[e._v("istory")]),e._v("采用"),_("code",[e._v("HTML5")]),e._v("的新特性；且提供了两个新方法："),_("code",[e._v("pushState()")]),e._v("，"),_("code",[e._v("replaceState()")]),e._v("可以对浏览器历史记录栈进行修改，以及"),_("code",[e._v("popState")]),e._v("事件的监听到状态变更")])]),e._v(" "),_("h2",{attrs:{id:"vue-路由的钩子函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-路由的钩子函数","aria-hidden":"true"}},[e._v("#")]),e._v(" vue 路由的钩子函数")]),e._v(" "),_("blockquote",[_("p",[e._v("首页可以控制导航跳转，"),_("code",[e._v("beforeEach")]),e._v("，"),_("code",[e._v("afterEach")]),e._v("等，一般用于页面"),_("code",[e._v("title")]),e._v("的修改。一些需要登录才能调整页面的重定向功能。")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("beforeEach")]),e._v("主要有 3 个参数"),_("code",[e._v("to")]),e._v("，"),_("code",[e._v("from")]),e._v("，"),_("code",[e._v("next")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("to")]),e._v("："),_("code",[e._v("route")]),e._v("即将进入的目标路由对象。")]),e._v(" "),_("li",[_("code",[e._v("from")]),e._v("："),_("code",[e._v("route")]),e._v("当前导航正要离开的路由。")]),e._v(" "),_("li",[_("code",[e._v("next")]),e._v("："),_("code",[e._v("function")]),e._v("一定要调用该方法"),_("code",[e._v("resolve")]),e._v("这个钩子。执行效果依赖"),_("code",[e._v("next")]),e._v("方法的调用参数。可以控制网页的跳转")])]),e._v(" "),_("h2",{attrs:{id:"vuex-是什么？怎么使用？哪种功能场景使用它？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vuex-是什么？怎么使用？哪种功能场景使用它？","aria-hidden":"true"}},[e._v("#")]),e._v(" vuex 是什么？怎么使用？哪种功能场景使用它？")]),e._v(" "),_("ul",[_("li",[e._v("只用来读取的状态集中放在"),_("code",[e._v("store")]),e._v("中； 改变状态的方式是提交"),_("code",[e._v("mutations")]),e._v("，这是个同步的事物； 异步逻辑应该封装在"),_("code",[e._v("action")]),e._v("中。")]),e._v(" "),_("li",[e._v("在"),_("code",[e._v("main.js")]),e._v("引入"),_("code",[e._v("store")]),e._v("，注入。新建了一个目录"),_("code",[e._v("store")]),e._v("，"),_("code",[e._v("… export")])]),e._v(" "),_("li",[_("strong",[e._v("场景有")]),e._v("：单页应用中，组件之间的状态、音乐播放、登录状态、加入购物车")]),e._v(" "),_("li",[_("code",[e._v("state")]),e._v("："),_("code",[e._v("Vuex")]),e._v("使用单一状态树,即每个应用将仅仅包含一个"),_("code",[e._v("store")]),e._v("实例，但单一状态树和模块化并不冲突。存放的数据状态，不可以直接修改里面的数据。")]),e._v(" "),_("li",[_("code",[e._v("mutations")]),e._v("："),_("code",[e._v("mutations")]),e._v("定义的方法动态修改"),_("code",[e._v("Vuex")]),e._v("的"),_("code",[e._v("store")]),e._v("中的状态或数据")]),e._v(" "),_("li",[_("code",[e._v("getters")]),e._v("：类似"),_("code",[e._v("vue")]),e._v("的计算属性，主要用来过滤一些数据。")]),e._v(" "),_("li",[_("code",[e._v("action")]),e._v("："),_("code",[e._v("actions")]),e._v("可以理解为通过将"),_("code",[e._v("mutations")]),e._v("里面处里数据的方法变成可异步的处理数据的方法，简单的说就是异步操作数据。"),_("code",[e._v("view")]),e._v("层通过"),_("code",[e._v("store.dispath")]),e._v("来分发"),_("code",[e._v("action")]),e._v(" "),_("code",[e._v("modules")]),e._v("：项目特别复杂的时候，可以让每一个模块拥有自己的"),_("code",[e._v("state")]),e._v("、"),_("code",[e._v("mutation")]),e._v("、"),_("code",[e._v("action")]),e._v("、"),_("code",[e._v("getters")]),e._v("，使得结构非常清晰，方便管理")])]),e._v(" "),_("h2",{attrs:{id:"v-if-和-v-show-区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-区别","aria-hidden":"true"}},[e._v("#")]),e._v(" v-if 和 v-show 区别")]),e._v(" "),_("ul",[_("li",[e._v("答："),_("code",[e._v("v-if")]),e._v("按照条件是否渲染，"),_("code",[e._v("v-show")]),e._v("是"),_("code",[e._v("display")]),e._v("的"),_("code",[e._v("block")]),e._v("或"),_("code",[e._v("none")])])]),e._v(" "),_("h2",{attrs:{id:"route和-router的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#route和-router的区别","aria-hidden":"true"}},[e._v("#")]),e._v(" "),_("code",[e._v("$route")]),e._v("和"),_("code",[e._v("$router")]),e._v("的区别")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("$route")]),e._v("是“路由信息对象”，包括"),_("code",[e._v("path")]),e._v("，"),_("code",[e._v("params")]),e._v("，"),_("code",[e._v("hash")]),e._v("，"),_("code",[e._v("query")]),e._v("，"),_("code",[e._v("fullPath")]),e._v("，"),_("code",[e._v("matched")]),e._v("，"),_("code",[e._v("name")]),e._v("等路由信息参数。")]),e._v(" "),_("li",[e._v("而"),_("code",[e._v("$router")]),e._v("是“路由实例”对象包括了路由的跳转方法，钩子函数等")])]),e._v(" "),_("h2",{attrs:{id:"如何让-css-只在当前组件中起作用？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何让-css-只在当前组件中起作用？","aria-hidden":"true"}},[e._v("#")]),e._v(" 如何让 CSS 只在当前组件中起作用？")]),e._v(" "),_("blockquote",[_("p",[e._v("将当前组件的"),_("code",[e._v("<style>")]),e._v("修改为"),_("code",[e._v("<style scoped>")])])]),e._v(" "),_("h2",{attrs:{id:"keep-alive-keep-alive-的作用是什么？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive-keep-alive-的作用是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" "),_("code",[e._v("<keep-alive></keep-alive>")]),e._v("的作用是什么？")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("<keep-alive></keep-alive>")]),e._v("包裹动态组件时，会缓存不活动的组件实例,主要用于保留组件状态或避免重新渲染\n"),_("blockquote",[_("p",[e._v("比如有一个列表和一个详情，那么用户就会经常执行打开详情=>返回列表=>打开详情…这样的话列表和详情都是一个频率很高的页面，那么就可以对列表组件使用"),_("code",[e._v("<keep-alive></keep-alive>")]),e._v("进行缓存，这样用户每次返回列表的时候，都能从缓存中快速渲染，而不是重新渲染")])])])]),e._v(" "),_("h2",{attrs:{id:"vue-组件-data-为什么必须是函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件-data-为什么必须是函数","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue 组件 data 为什么必须是函数")]),e._v(" "),_("ul",[_("li",[e._v("每个组件都是"),_("code",[e._v("Vue")]),e._v("的实例。")]),e._v(" "),_("li",[e._v("组件共享"),_("code",[e._v("data")]),e._v("属性，当"),_("code",[e._v("data")]),e._v("的值是同一个引用类型的值时，改变其中一个会影响其他")])]),e._v(" "),_("h2",{attrs:{id:"在-vue-中使用插件的步骤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在-vue-中使用插件的步骤","aria-hidden":"true"}},[e._v("#")]),e._v(" 在 Vue 中使用插件的步骤")]),e._v(" "),_("ul",[_("li",[e._v("采用"),_("code",[e._v("ES6")]),e._v("的"),_("code",[e._v("import ... from ...")]),e._v("语法或"),_("code",[e._v("CommonJS")]),e._v("的"),_("code",[e._v("require()")]),e._v("方法引入插件")]),e._v(" "),_("li",[e._v("使用全局方法"),_("code",[e._v("Vue.use( plugin )")]),e._v("使用插件,可以传入一个选项对象"),_("code",[e._v("Vue.use(MyPlugin, { someOption: true })")])])]),e._v(" "),_("h2",{attrs:{id:"vue-cli-工程技术集合介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-工程技术集合介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" vue-cli 工程技术集合介绍")]),e._v(" "),_("h3",{attrs:{id:"问题一：构建的-vue-cli-工程都到了哪些技术，它们的作用分别是什么？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题一：构建的-vue-cli-工程都到了哪些技术，它们的作用分别是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" 问题一：构建的 vue-cli 工程都到了哪些技术，它们的作用分别是什么？")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("vue.js")]),e._v("："),_("code",[e._v("vue-cli")]),e._v("工程的核心，主要特点是 双向数据绑定 和 组件系统。")]),e._v(" "),_("li",[_("code",[e._v("vue-router")]),e._v("："),_("code",[e._v("vue")]),e._v("官方推荐使用的路由框架。")]),e._v(" "),_("li",[_("code",[e._v("vuex")]),e._v("：专为"),_("code",[e._v("Vue.js")]),e._v("应用项目开发的状态管理器，主要用于维护"),_("code",[e._v("vue")]),e._v("组件间共用的一些 变量 和 方法。")]),e._v(" "),_("li",[_("code",[e._v("axios")]),e._v("（ 或者"),_("code",[e._v("fetch")]),e._v("、"),_("code",[e._v("ajax")]),e._v("）：用于发起"),_("code",[e._v("GET")]),e._v("、或"),_("code",[e._v("POST")]),e._v("等"),_("code",[e._v("http")]),e._v("请求，基于"),_("code",[e._v("Promise")]),e._v("设计。")]),e._v(" "),_("li",[_("code",[e._v("vuex")]),e._v("等：一个专为"),_("code",[e._v("vue")]),e._v("设计的移动端 UI 组件库。")]),e._v(" "),_("li",[e._v("创建一个"),_("code",[e._v("emit.js")]),e._v("文件，用于"),_("code",[e._v("vue")]),e._v("事件机制的管理。")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("：模块加载和"),_("code",[e._v("vue-cli")]),e._v("工程打包器。\n"),_("strong",[e._v("问题二：vue-cli 工程常用的 npm 命令有哪些？")])]),e._v(" "),_("li",[e._v("下载"),_("code",[e._v("node_modules")]),e._v("资源包的命令：")])]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n")])])]),_("ul",[_("li",[e._v("启动"),_("code",[e._v("vue-cli")]),e._v("开发环境的 npm 命令：")])]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run dev\n")])])]),_("ul",[_("li",[_("code",[e._v("vue-cli")]),e._v("生成 生产环境部署资源 的"),_("code",[e._v("npm")]),e._v("命令：")])]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run build\n")])])]),_("ul",[_("li",[e._v("用于查看"),_("code",[e._v("vue-cli")]),e._v("生产环境部署资源文件大小的"),_("code",[e._v("npm")]),e._v("命令：")])]),e._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run build --report\n")])])]),_("blockquote",[_("p",[e._v("在浏览器上自动弹出一个 展示"),_("code",[e._v("vue-cli")]),e._v("工程打包后"),_("code",[e._v("app.js")]),e._v("、"),_("code",[e._v("manifest.js")]),e._v("、"),_("code",[e._v("vendor.js")]),e._v("文件里面所包含代码的页面。可以具此优化"),_("code",[e._v("vue-cli")]),e._v("生产环境部署的静态资源，提升 页面 的加载速度")])]),e._v(" "),_("h2",{attrs:{id:"路由之间跳转？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由之间跳转？","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由之间跳转？")]),e._v(" "),_("h3",{attrs:{id:"声明式（标签跳转）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明式（标签跳转）","aria-hidden":"true"}},[e._v("#")]),e._v(" 声明式（标签跳转）")]),e._v(" "),_("div",{staticClass:"language-html extra-class"},[_("pre",{pre:!0,attrs:{class:"language-html"}},[_("code",[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),e._v("router-link")]),e._v(" "),_("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v(":to")]),_("span",{pre:!0,attrs:{class:"token attr-value"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')]),e._v("index"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v('"')])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("</")]),e._v("router-link")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v("\n")])])]),_("h3",{attrs:{id:"编程式（-js-跳转）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编程式（-js-跳转）","aria-hidden":"true"}},[e._v("#")]),e._v(" 编程式（ js 跳转）")]),e._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[e._v("router"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[e._v("push")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[e._v("'index'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),_("h2",{attrs:{id:"实现-vue-ssr"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现-vue-ssr","aria-hidden":"true"}},[e._v("#")]),e._v(" 实现 Vue SSR")]),e._v(" "),_("h3",{attrs:{id:"其基本实现原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其基本实现原理","aria-hidden":"true"}},[e._v("#")]),e._v(" 其基本实现原理")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("app.js")]),e._v("作为客户端与服务端的公用入口，导出"),_("code",[e._v("Vue")]),e._v("根实例，供客户端"),_("code",[e._v("entry")]),e._v("与服务端"),_("code",[e._v("entry")]),e._v("使用。客户端"),_("code",[e._v("entry")]),e._v("主要作用挂载到"),_("code",[e._v("DOM")]),e._v("上，服务端"),_("code",[e._v("entry")]),e._v("除了创建和返回实例，还进行路由匹配与数据预获取。")]),e._v(" "),_("li",[_("code",[e._v("webpack")]),e._v("为客服端打包一个"),_("code",[e._v("Client Bundle")]),e._v("，为服务端打包一个"),_("code",[e._v("Server Bundle")]),e._v("。")]),e._v(" "),_("li",[e._v("服务器接收请求时，会根据"),_("code",[e._v("url")]),e._v("，加载相应组件，获取和解析异步数据，创建一个读取"),_("code",[e._v("Server Bundle")]),e._v("的"),_("code",[e._v("BundleRenderer")]),e._v("，然后生成"),_("code",[e._v("html")]),e._v("发送给客户端。")]),e._v(" "),_("li",[e._v("客户端混合，客户端收到从服务端传来的"),_("code",[e._v("DOM")]),e._v("与自己的生成的 DOM 进行对比，把不相同的"),_("code",[e._v("DOM")]),e._v("激活，使其可以能够响应后续变化，这个过程称为客户端激活 。为确保混合成功，客户端与服务器端需要共享同一套数据。在服务端，可以在渲染之前获取数据，填充到"),_("code",[e._v("stroe")]),e._v("里，这样，在客户端挂载到"),_("code",[e._v("DOM")]),e._v("之前，可以直接从"),_("code",[e._v("store")]),e._v("里取数据。首屏的动态数据通过"),_("code",[e._v("window.__INITIAL_STATE__")]),e._v("发送到客户端\n"),_("blockquote",[_("p",[_("code",[e._v("Vue SSR")]),e._v("的实现，主要就是把"),_("code",[e._v("Vue")]),e._v("的组件输出成一个完整"),_("code",[e._v("HTML")]),e._v(","),_("code",[e._v("vue-server-renderer")]),e._v("就是干这事的")])])]),e._v(" "),_("li",[_("code",[e._v("Vue SSR")]),e._v("需要做的事多点（输出完整 HTML），除了"),_("code",[e._v("complier -> vnode")]),e._v("，还需如数据获取填充至"),_("code",[e._v("HTML")]),e._v("、客户端混合（"),_("code",[e._v("hydration")]),e._v("）、缓存等等。 相比于其他模板引擎（"),_("code",[e._v("ejs")]),e._v(","),_("code",[e._v("jade")]),e._v("等），最终要实现的目的是一样的，性能上可能要差点")])]),e._v(" "),_("h2",{attrs:{id:"vue-computed-实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-computed-实现","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue computed 实现")]),e._v(" "),_("ul",[_("li",[e._v("建立与其他属性（如："),_("code",[e._v("data")]),e._v("、"),_("code",[e._v("Store")]),e._v("）的联系；")]),e._v(" "),_("li",[e._v("属性改变后，通知计算属性重新计算\n"),_("blockquote",[_("p",[e._v("实现时，主要如下")])])]),e._v(" "),_("li",[e._v("初始化"),_("code",[e._v("data")]),e._v("， 使用"),_("code",[e._v("Object.defineProperty")]),e._v("把这些属性全部转为"),_("code",[e._v("getter/setter")]),e._v("。")]),e._v(" "),_("li",[e._v("初始化"),_("code",[e._v("computed")]),e._v(", 遍历"),_("code",[e._v("computed")]),e._v("里的每个属性，每个"),_("code",[e._v("computed")]),e._v("属性都是一个"),_("code",[e._v("watch")]),e._v("实例。每个属性提供的函数作为属性的"),_("code",[e._v("getter")]),e._v("，使用"),_("code",[e._v("Object.defineProperty")]),e._v("转化。")]),e._v(" "),_("li",[_("code",[e._v("Object.defineProperty getter")]),e._v("依赖收集。用于依赖发生变化时，触发属性重新计算。")]),e._v(" "),_("li",[e._v("若出现当前"),_("code",[e._v("computed")]),e._v("计算属性嵌套其他"),_("code",[e._v("computed")]),e._v("计算属性时，先进行其他的依赖收集")])]),e._v(" "),_("h2",{attrs:{id:"vue-complier-实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-complier-实现","aria-hidden":"true"}},[e._v("#")]),e._v(" Vue complier 实现")]),e._v(" "),_("ul",[_("li",[e._v("模板解析这种事，本质是将数据转化为一段"),_("code",[e._v("html")]),e._v("，最开始出现在后端，经过各种处理吐给前端。随着各种"),_("code",[e._v("mv*")]),e._v("的兴起，模板解析交由前端处理。")]),e._v(" "),_("li",[e._v("总的来说，"),_("code",[e._v("Vue complier")]),e._v("是将"),_("code",[e._v("template")]),e._v("转化成一个"),_("code",[e._v("render")]),e._v("字符串。\n"),_("blockquote",[_("p",[e._v("可以简单理解成以下步骤：")])])]),e._v(" "),_("li",[_("code",[e._v("parse")]),e._v("过程，将"),_("code",[e._v("template")]),e._v("利用正则转化成"),_("code",[e._v("AST")]),e._v("抽象语法树。")]),e._v(" "),_("li",[_("code",[e._v("optimize")]),e._v("过程，标记静态节点，后"),_("code",[e._v("diff")]),e._v("过程跳过静态节点，提升性能。")]),e._v(" "),_("li",[_("code",[e._v("generate")]),e._v("过程，生成"),_("code",[e._v("render")]),e._v("字符串")])]),e._v(" "),_("h2",{attrs:{id:"怎么快速定位哪个组件出现性能问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#怎么快速定位哪个组件出现性能问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 怎么快速定位哪个组件出现性能问题")]),e._v(" "),_("blockquote",[_("p",[e._v("用"),_("code",[e._v("timeline")]),e._v("工具。 大意是通过"),_("code",[e._v("timeline")]),e._v("来查看每个函数的调用时常，定位出哪个函数的问题，从而能判断哪个组件出了问题")])])])}],!1,null,null,null);a.options.__file="vue.md";v.default=a.exports}}]);